spring.application.name=UserService

server.port=8081

spring.datasource.url= jdbc:postgresql://localhost:5432/userservice
spring.datasource.username=postgres
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Used to import configuration from config server
spring.config.import=optional:configserver:http://localhost:8085

#used to set which file should get run dev,prod,default
#spring.profiles.active=


# used to register service on service registery as client 
# eureka.client.fetch-registry=true
# eureka.instance.prefer-ip-address=true
# eureka.client.register-with-eureka=true


#resiliance  configuration
# how many request should failed
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#Configuration for CircuitBreaker
resilience4j.circuitbreaker.instances.ratingHotelBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-type=count-based


#Configuration for Retry 
resilience4j.retry.instances.retryForRatingHotel.wait-duration=3s
resilience4j.retry.instances.retryForRatingHotel.max-attempts=3


#Configuration for RateLimiter 
resilience4j.ratelimiter.instances.ratingHotelLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.ratingHotelLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.ratingHotelLimiter.timeout-duration=0s


